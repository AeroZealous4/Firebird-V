/*
 * Color_Sensor.cpp
 *
 * Created: 23-06-2014 14:45:11
 *  Author: Yash Joshi
 
This experiment demonstrates the use of Color Sensor.

Concepts covered: External Interrupts

Micro-controller pins used:

PORTD0 (INT0): External Interrupt used to count the number of pulses generated by the color sensor

PORTD4 & PORTD5: Control the S0 and S1 pins of the color sensor to choose a scaling factor

PORTD6 & PORTD7: Control S2 and S3 pins of the color sensor to choose the color filter.   

Note:

1. Make sure that in the configuration options following settings are
done for proper operation of the code

Micro-controller: atmega2560
Frequency: 14745600
Optimization: -O0  (For more information read section: Selecting proper optimization
options below figure 2.22 in the Software Manual)

2.	It is observed that external interrupts does not work with the optimization level -Os

Connections:
 
 *Vcc is connected on servo pod pin 7
 *Vdd is connected on servo pod pin 6
 *Output of the sensor is connected to PD0 (INT0) of Atmega 2560 i.e Pin 20 on expansion slot
 *S0 of the sensor is connected to PD4 of Atmega 2560 i.e Pin 25 on expansion slot
 *S1 of the sensor is connected to PD5 of Atmega 2560 i.e Pin 29 on expansion slot
 *S2 of the sensor is connected to PD6 of Atmega 2560 i.e Pin 33 on expansion slot
 *S3 of the sensor is connected to PD7 of Atmega 2560 i.e Pin 34 on expansion slot
 */ 


void init_color_sensor(void);

//Filter Selection
void filter_red(void);    //Used to select red filter
void filter_green(void);	//Used to select green filter
void filter_blue(void);	//Used to select blue filter
void filter_clear(void);	//select no filter

//Color Sensing Scaling
// void color_sensor_scaling();		//This function is used to select the scaled down version of the original frequency of the output generated by the color sensor, generally 20% scaling is preferable, though you can change the values as per your application by referring datasheet

// function to select red filter and returns count. The count will be more if the color is red. The count will be very less if its blue or green.
void red_read(void); 
// function to select green filter and display the count generated by the sensor on LCD. The count will be more if the color is green. The count will be very less if its blue or red.
void green_read(void);
// function to select blue filter and display the count generated by the sensor on LCD. The count will be more if the color is blue. The count will be very less if its red or green.
void blue_read(void);

// function to select red filter and returns count. The count will be more if the color is red. The count will be very less if its blue or green.
unsigned long int red_read_ret(void); 
// function to select green filter and display the count generated by the sensor on LCD. The count will be more if the color is green. The count will be very less if its blue or red.
unsigned long int green_read_ret(void);
// function to select blue filter and display the count generated by the sensor on LCD. The count will be more if the color is blue. The count will be very less if its red or green.
unsigned long int blue_read_ret(void);

char Sense_Color(void);